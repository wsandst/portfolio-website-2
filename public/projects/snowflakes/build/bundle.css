html{height:100%;background-color:#202020;color:#fff}body{margin:0;height:100%}main.svelte-4lfqje.svelte-4lfqje{display:block;height:100%;width:100%}button.svelte-4lfqje.svelte-4lfqje{all:unset;padding:0.5em}input[type='number'].svelte-4lfqje.svelte-4lfqje{all:unset;border:1px;border-style:solid;border-radius:8px;border-color:grey;padding:0.15em;padding-left:0.5em;padding-right:0.5em;width:55px;-moz-appearance:textfield}input.svelte-4lfqje.svelte-4lfqje:disabled{color:grey}input.svelte-4lfqje.svelte-4lfqje::-webkit-outer-spin-button,input.svelte-4lfqje.svelte-4lfqje::-webkit-inner-spin-button{-webkit-appearance:none}#column.svelte-4lfqje.svelte-4lfqje{height:100%;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;gap:5px}#siminfo.svelte-4lfqje.svelte-4lfqje{white-space:pre;font-family:monospace;padding-top:0;display:block;text-align:center;display:flex;flex-direction:column}#paraminputs.svelte-4lfqje.svelte-4lfqje{display:flex;flex-direction:row;align-items:center;justify-content:center;align-content:center;text-align:center;flex-wrap:wrap}#paraminputs.svelte-4lfqje p.svelte-4lfqje{margin-left:1em;margin-right:0.3em;margin-top:0.6em;margin-bottom:0.6em}#controls.svelte-4lfqje.svelte-4lfqje{display:flex;flex-direction:row;justify-content:flex-start;width:100%;margin-left:1.5em}@media only screen and (max-width: 480px){#column.svelte-4lfqje.svelte-4lfqje{width:340px}#paraminputs.svelte-4lfqje.svelte-4lfqje{width:230px}}@media only screen and (min-width: 480px){#column.svelte-4lfqje.svelte-4lfqje{width:500px}}@media only screen and (min-width: 1020px){#column.svelte-4lfqje.svelte-4lfqje{width:650px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */.spin.svelte-1cj2gr0{animation:svelte-1cj2gr0-spin 2s 0s infinite linear}.pulse.svelte-1cj2gr0{animation:svelte-1cj2gr0-spin 1s infinite steps(8)}@keyframes svelte-1cj2gr0-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmEuc3ZlbHRlIiwic291cmNlcyI6WyJmYS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbmltcG9ydCB7XG4gIGpvaW5Dc3MsXG4gIGdldFN0eWxlcyxcbiAgZ2V0VHJhbnNmb3JtLFxufSBmcm9tICcuL3V0aWxzJztcblxubGV0IGNsYXp6ID0gJyc7XG5leHBvcnQgeyBjbGF6eiBhcyBjbGFzcyB9O1xuZXhwb3J0IGxldCBpZCA9ICcnO1xuZXhwb3J0IGxldCBzdHlsZSA9ICcnO1xuXG5leHBvcnQgbGV0IGljb247XG5cbmV4cG9ydCBsZXQgc2l6ZSA9ICcnO1xuZXhwb3J0IGxldCBjb2xvciA9ICcnO1xuXG5leHBvcnQgbGV0IGZ3ID0gZmFsc2U7XG5leHBvcnQgbGV0IHB1bGwgPSAnJztcblxuZXhwb3J0IGxldCBzY2FsZSA9IDE7XG5leHBvcnQgbGV0IHRyYW5zbGF0ZVggPSAwO1xuZXhwb3J0IGxldCB0cmFuc2xhdGVZID0gMDtcbmV4cG9ydCBsZXQgcm90YXRlID0gJyc7XG5leHBvcnQgbGV0IGZsaXAgPSBmYWxzZTtcblxuZXhwb3J0IGxldCBzcGluID0gZmFsc2U7XG5leHBvcnQgbGV0IHB1bHNlID0gZmFsc2U7XG5cbi8vIER1b3RvbmUgSWNvbnNcbmV4cG9ydCBsZXQgcHJpbWFyeUNvbG9yID0gJyc7XG5leHBvcnQgbGV0IHNlY29uZGFyeUNvbG9yID0gJyc7XG5leHBvcnQgbGV0IHByaW1hcnlPcGFjaXR5ID0gMTtcbmV4cG9ydCBsZXQgc2Vjb25kYXJ5T3BhY2l0eSA9IDAuNDtcbmV4cG9ydCBsZXQgc3dhcE9wYWNpdHkgPSBmYWxzZTtcblxubGV0IGk7XG5sZXQgYztcbmxldCBzO1xubGV0IHRyYW5zZm9ybTtcblxuJDogaSA9IChpY29uICYmIGljb24uaWNvbikgfHwgWzAsIDAsICcnLCBbXSwgJyddO1xuXG4kOiBjID0gam9pbkNzcyhcbiAgW1xuICAgIGNsYXp6LFxuICAgICdzdmVsdGUtZmEnLFxuICAgIHNwaW4gJiYgJ3NwaW4nLFxuICAgIHB1bHNlICYmICdwdWxzZScsXG4gIF0sXG4gICcgJyxcbik7XG5cbiQ6IHMgPSBnZXRTdHlsZXMoc3R5bGUsIHNpemUsIHB1bGwsIGZ3KTtcblxuJDogdHJhbnNmb3JtID0gZ2V0VHJhbnNmb3JtKHNjYWxlLCB0cmFuc2xhdGVYLCB0cmFuc2xhdGVZLCByb3RhdGUsIGZsaXAsIDUxMik7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuLnNwaW4ge1xuICBhbmltYXRpb246IHNwaW4gMnMgMHMgaW5maW5pdGUgbGluZWFyO1xufVxuXG4ucHVsc2Uge1xuICBhbmltYXRpb246IHNwaW4gMXMgaW5maW5pdGUgc3RlcHMoOCk7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59XG48L3N0eWxlPlxuXG57I2lmIGlbNF19XG4gIDxzdmdcbiAgICB7aWR9XG4gICAgY2xhc3M9e2N9XG4gICAgc3R5bGU9e3N9XG4gICAgdmlld0JveD17YDAgMCAke2lbMF19ICR7aVsxXX1gfVxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gID5cbiAgICA8Z1xuICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7aVswXSAvIDJ9ICR7aVsxXSAvIDJ9KWB9XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luPXtgJHtpWzBdIC8gNH0gMGB9XG4gICAgPlxuICAgICAgPGcge3RyYW5zZm9ybX0+XG4gICAgICAgIHsjaWYgdHlwZW9mIGlbNF0gPT0gJ3N0cmluZyd9XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9e2lbNF19XG4gICAgICAgICAgICBmaWxsPXtjb2xvciB8fCBwcmltYXJ5Q29sb3IgfHwgJ2N1cnJlbnRDb2xvcid9XG4gICAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtpWzBdIC8gLTJ9ICR7aVsxXSAvIC0yfSlgfVxuICAgICAgICAgIC8+XG4gICAgICAgIHs6ZWxzZX1cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD17aVs0XVswXX1cbiAgICAgICAgICAgIGZpbGw9e3NlY29uZGFyeUNvbG9yIHx8IGNvbG9yIHx8ICdjdXJyZW50Q29sb3InfVxuICAgICAgICAgICAgZmlsbC1vcGFjaXR5PXtzd2FwT3BhY2l0eSAhPSBmYWxzZSA/IHByaW1hcnlPcGFjaXR5IDogc2Vjb25kYXJ5T3BhY2l0eX1cbiAgICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke2lbMF0gLyAtMn0gJHtpWzFdIC8gLTJ9KWB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD17aVs0XVsxXX1cbiAgICAgICAgICAgIGZpbGw9e3ByaW1hcnlDb2xvciB8fCBjb2xvciB8fCAnY3VycmVudENvbG9yJ31cbiAgICAgICAgICAgIGZpbGwtb3BhY2l0eT17c3dhcE9wYWNpdHkgIT0gZmFsc2UgPyBzZWNvbmRhcnlPcGFjaXR5IDogcHJpbWFyeU9wYWNpdHl9XG4gICAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtpWzBdIC8gLTJ9ICR7aVsxXSAvIC0yfSlgfVxuICAgICAgICAgIC8+XG4gICAgICAgIHsvaWZ9XG4gICAgICA8L2c+XG4gICAgPC9nPlxuICA8L3N2Zz5cbnsvaWZ9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkRBLEtBQUssZUFBQyxDQUFDLEFBQ0wsU0FBUyxDQUFFLG1CQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxBQUN2QyxDQUFDLEFBRUQsTUFBTSxlQUFDLENBQUMsQUFDTixTQUFTLENBQUUsbUJBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEFBQ3RDLENBQUMsQUFFRCxXQUFXLG1CQUFLLENBQUMsQUFDZixFQUFFLEFBQUMsQ0FBQyxBQUNGLFNBQVMsQ0FBRSxPQUFPLElBQUksQ0FBQyxBQUN6QixDQUFDLEFBQ0QsSUFBSSxBQUFDLENBQUMsQUFDSixTQUFTLENBQUUsT0FBTyxNQUFNLENBQUMsQUFDM0IsQ0FBQyxBQUNILENBQUMifQ== */@media only screen and (max-width: 480px){canvas.svelte-1e74k2u{width:340px;height:340px}}@media only screen and (min-width: 480px){canvas.svelte-1e74k2u{width:500px;height:500px}}@media only screen and (min-width: 1020px){canvas.svelte-1e74k2u{width:650px;height:650px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlzcGxheS5zdmVsdGUiLCJzb3VyY2VzIjpbIkRpc3BsYXkuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIlxuPHNjcmlwdD5cbiAgICAvLyBEaXNwbGF5L3JlbmRlciBjYW52YXMgY29tcG9uZW50IGZvciB2aWV3aW5nIGEgU25vd2ZsYWtlIFNpbXVsYXRpb25cbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcbiAgICBpbXBvcnQgKiBhcyByZW5kZXIgZnJvbSAnLi9yZW5kZXInXG5cbiAgICAvLyBJbXBvcnQgc2hhZGVyIHNvdXJjZXMgYXMgc3RyaW5nc1xuICAgIGltcG9ydCB2ZXJ0U2hhZGVyU291cmNlIGZyb20gJy4vc2hhZGVycy92ZXJ0ZXgudmVydCdcbiAgICBpbXBvcnQgZnJhZ1NoYWRlclNvdXJjZSBmcm9tICcuL3NoYWRlcnMvZnJhZ21lbnQuZnJhZydcblxuXHRsZXQgY2FudmFzO1xuXHQvLyBXZWJHTCBpbnRlcm5hbCBzdGF0ZVxuXHRsZXQgZ2xDdHg7XG5cdGxldCBzaGFkZXJQcm9ncmFtO1xuXHRsZXQgYnVmZmVycztcblx0bGV0IHByb2dyYW1JbmZvO1xuXHRsZXQgdmVydGV4Q291bnQgPSAwO1xuXHQvLyBEcmF3aW5nIHNldHRpbmdzXG5cdGxldCBoZXhXaWR0aDtcblx0bGV0IGhleEhlaWdodFxuXHRsZXQgY29sb3IgPSBbMC41LCAwLjgyLCAwLjk2LCAxLjBdO1xuXHRsZXQgb2Zmc2V0ID0gWzAsIDBdO1xuXHRsZXQgc2NhbGUgPSAxLjA7XG5cblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0Y2FudmFzLndpZHRoID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuXHRcdGNhbnZhcy5oZWlnaHQgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuXHRcdGdsQ3R4ID0gY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiLCB7YW50aWFsaWFzOiB0cnVlfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTZXR1cCBXZWJHTCBjb250ZXh0XG5cdFx0c2hhZGVyUHJvZ3JhbSA9IHJlbmRlci5pbml0U2hhZGVyUHJvZ3JhbShnbEN0eCwgdmVydFNoYWRlclNvdXJjZSwgZnJhZ1NoYWRlclNvdXJjZSk7XG5cblx0XHRwcm9ncmFtSW5mbyA9IHtcblx0XHRcdFx0cHJvZ3JhbTogc2hhZGVyUHJvZ3JhbSxcblx0XHRcdFx0YXR0cmliTG9jYXRpb25zOiB7XG5cdFx0XHRcdHZlcnRleFBvc2l0aW9uOiBnbEN0eC5nZXRBdHRyaWJMb2NhdGlvbihzaGFkZXJQcm9ncmFtLCAnYVZlcnRleFBvc2l0aW9uJyksXG4gICAgICAgICAgICAgICAgdmVydGV4Q29sb3I6IGdsQ3R4LmdldEF0dHJpYkxvY2F0aW9uKHNoYWRlclByb2dyYW0sICdhVmVydGV4Q29sb3InKSxcblx0XHRcdH0sXG5cdFx0XHRcdHVuaWZvcm1Mb2NhdGlvbnM6IHtcblx0XHRcdFx0cHJvamVjdGlvbk1hdHJpeDogZ2xDdHguZ2V0VW5pZm9ybUxvY2F0aW9uKHNoYWRlclByb2dyYW0sICd1UHJvamVjdGlvbk1hdHJpeCcpLFxuXHRcdFx0XHRtb2RlbFZpZXdNYXRyaXg6IGdsQ3R4LmdldFVuaWZvcm1Mb2NhdGlvbihzaGFkZXJQcm9ncmFtLCAndU1vZGVsVmlld01hdHJpeCcpLFxuXHRcdFx0XHRoZXhDb2xvcjogZ2xDdHguZ2V0VW5pZm9ybUxvY2F0aW9uKHNoYWRlclByb2dyYW0sICdoZXhDb2xvcicpLFxuXHRcdFx0fSxcblx0XHR9O1xuXG5cdFx0YnVmZmVycyA9IHJlbmRlci5pbml0QnVmZmVycyhnbEN0eCk7XG5cblx0fSk7XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHZlcnRleCBwb3NpdGlvbiBidWZmZXJcbiAgICAgKiBAcGFyYW0gYnVmZmVyIHZlcnRleCBwb3NpdGlvbiBidWZmZXIgKHgsIHkpICogTlxuICAgICAqL1xuICAgIGV4cG9ydCBmdW5jdGlvbiB1cGRhdGVQb3NpdGlvbkJ1ZmZlcihidWZmZXIpIHtcbiAgICAgICAgcmVuZGVyLnVwZGF0ZUJ1ZmZlckRhdGEoZ2xDdHgsIGJ1ZmZlcnMucG9zaXRpb24sIGJ1ZmZlcik7XG4gICAgICAgIHZlcnRleENvdW50ID0gYnVmZmVyLmxlbmd0aCAvIDI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSB2ZXJ0ZXggY29sb3IgYnVmZmVyXG4gICAgICogQHBhcmFtIGJ1ZmZlciB2ZXJ0ZXggY29sb3IgYnVmZmVyIChyLCBnLCBiLCBhKSAqIE5cbiAgICAgKi9cbiAgICBleHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29sb3JCdWZmZXIoYnVmZmVyKSB7XG4gICAgICAgIHJlbmRlci51cGRhdGVCdWZmZXJEYXRhKGdsQ3R4LCBidWZmZXJzLmNvbG9yLCBidWZmZXIpO1xuICAgIH1cblxuXHRleHBvcnQgZnVuY3Rpb24gc2V0U2ltU2l6ZSh3aWR0aCwgaGVpZ2h0KSB7XG5cdFx0aGV4V2lkdGggPSB3aWR0aDtcblx0XHRoZXhIZWlnaHQgPSBoZWlnaHQ7XG5cdFx0dXBkYXRlQ2FudmFzU2l6ZSgpO1xuXHR9XG5cblx0ZXhwb3J0IGZ1bmN0aW9uIHNldFNpbUNvbG9yKGhleCkge1xuXHRcdHZhciBiaWdpbnQgPSBwYXJzZUludChoZXgsIDE2KTtcblx0XHR2YXIgciA9IChiaWdpbnQgPj4gMTYpICYgMjU1O1xuXHRcdHZhciBnID0gKGJpZ2ludCA+PiA4KSAmIDI1NTtcblx0XHR2YXIgYiA9IGJpZ2ludCAmIDI1NTtcblx0XHRjb2xvciA9IFtyLGcsYiwxLjBdO1xuXHRcdGNvbnNvbGUubG9nKGNvbG9yKTtcblx0XHRjb25zb2xlLmxvZyhoZXgpO1xuXHR9XG5cblx0ZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckZyYW1lKCkge1xuXHRcdGlmIChjYW52YXMud2lkdGggIT0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoXG5cdFx0XHRcdHx8IGNhbnZhcy5oZWlnaHQgIT0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCkge1xuXHRcdFx0dXBkYXRlQ2FudmFzU2l6ZSgpO1xuXHRcdH1cblx0XHRyZW5kZXIuZHJhdyhnbEN0eCwgcHJvZ3JhbUluZm8sIGJ1ZmZlcnMsIHZlcnRleENvdW50LCBvZmZzZXQsIHNjYWxlLCBjb2xvciwgW2NhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodF0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRha2UgYSBoaWdoLXJlcyBzY3JlZW5zaG90ICg0MDAweDQwMDApXG5cdCAqIEByZXR1cm4gc2NyZWVuc2hvdCBhcnJheVxuXHQgKi9cblx0ZXhwb3J0IGZ1bmN0aW9uIHNjcmVlbnNob3QoKSB7XG5cdFx0Ly8gVGFrZSBhIDQwMDB4NDAwMCBzY3JlZW5zaG90XG5cdFx0Ly8gVGVtcG9yYXJpbHkgaW5jcmVhc2UgY2FudmFzIHNpemVcblx0XHRjYW52YXMud2lkdGggPSA0MDAwO1xuXHRcdGNhbnZhcy5oZWlnaHQgPSA0MDAwO1xuXHRcdHNjYWxlID0gKGNhbnZhcy53aWR0aC0xMCkvKGhleFdpZHRoKk1hdGguc3FydCgzKSk7XG5cdFx0b2Zmc2V0ID0gWzUsIDM1XTtcblx0XHRnbEN0eC52aWV3cG9ydCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuXHRcdHJlbmRlci5kcmF3KGdsQ3R4LCBwcm9ncmFtSW5mbywgYnVmZmVycywgdmVydGV4Q291bnQsIG9mZnNldCwgc2NhbGUsIGNvbG9yLCBbY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0XSk7XG5cblx0XHR2YXIgb2Zmc2NyZWVuQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcblx0XHRvZmZzY3JlZW5DYW52YXMud2lkdGggPSBjYW52YXMud2lkdGg7XG5cdFx0b2Zmc2NyZWVuQ2FudmFzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XG5cblx0XHQvLyBEcmF3IHRoZSBPcGVuR0wgY2FudmFzIHRvIGEgMkQgY2FudmFzXG5cdFx0dmFyIGN0eCA9IG9mZnNjcmVlbkNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cdFx0Y3R4LmRyYXdJbWFnZShjYW52YXMsMCwwKTtcblxuXHRcdC8vIFNhdmUgYXMgYXJyYXlcblx0XHQvL2xldCBpbWFnZSA9IGN0eC5nZXRJbWFnZURhdGEoMCwgMCwgMjAwMCwgMjAwMCk7XG5cblx0XHQvLyBTYXZlIGFzIFVSTCwgb3BlbiBpbiBuZXcgdGFiXG5cdFx0bGV0IHVybCA9IG9mZnNjcmVlbkNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL3BuZycpO1xuXHRcdHZhciBuZXdUYWIgPSB3aW5kb3cub3BlbigpO1xuXHRcdG5ld1RhYi5kb2N1bWVudC5ib2R5LmlubmVySFRNTCA9IFxuXHRcdFx0JzxpbWcgc3JjPVwiJyBcblx0XHRcdCsgdXJsICsgXG5cdFx0XHQnXCIgd2lkdGg9XCIxMDAwcHhcIiBoZWlnaHQ9XCIxMDAwcHhcIj48L2ltZz4nO1xuXHRcdFx0bmV3VGFiLmRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjMjAyMDIwXCJcblxuXHRcdC8vIFJlc3RvcmUgdGhlIGNhbnZhc1xuXHRcdHVwZGF0ZUNhbnZhc1NpemUoKTtcblx0XHRyZW5kZXJGcmFtZSgpO1xuXHR9XG5cdFxuXHRmdW5jdGlvbiB1cGRhdGVDYW52YXNTaXplKCkge1xuXHRcdC8vIFVwZGF0ZSBjYW52YXMgZGltZW5zaW9ucyBpZiB0aGV5IGNoYW5nZWRcblx0XHRjYW52YXMud2lkdGggPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG5cdFx0Y2FudmFzLmhlaWdodCA9IGNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XG5cdFx0c2NhbGUgPSAoY2FudmFzLndpZHRoLTEwKS8oaGV4V2lkdGgqTWF0aC5zcXJ0KDMpKTtcblx0XHRvZmZzZXQgPSBbNSwgMzVdO1xuXHRcdGdsQ3R4LnZpZXdwb3J0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG5cdH1cblxuXHRmdW5jdGlvbiB6b29tKGV2ZW50KSB7XG5cdFx0Ly8gRGlzYWJsZSB6b29tIGZvciBub3dcblx0XHRyZXR1cm47XG5cblx0XHRsZXQgeCA9IGV2ZW50Lm9mZnNldFggLyBzY2FsZSArIG9mZnNldFswXTtcblx0XHRsZXQgeSA9IChjYW52YXMud2lkdGggLSBldmVudC5vZmZzZXRZKSAvIHNjYWxlICsgb2Zmc2V0WzFdO1xuXHRcdGxldCB6b29tU2NhbGUgPSAoZXZlbnQuZGVsdGFZICogLTAuMDAxKTtcblx0XHRsZXQgbmV3U2NhbGUgPSBzY2FsZSArIHNjYWxlKnpvb21TY2FsZTtcblx0XHRsZXQgc2NhbGVEZWx0YSA9IG5ld1NjYWxlIC0gc2NhbGU7XG5cdFx0bGV0IG9mZnNldFggPSAtKHggKiBzY2FsZURlbHRhKTtcblx0XHRsZXQgb2Zmc2V0WSA9IC0oeSAqIHNjYWxlRGVsdGEpO1xuXHRcdHNjYWxlID0gbmV3U2NhbGU7XG5cdFx0b2Zmc2V0ID0gW29mZnNldFgsIG9mZnNldFldO1xuXHRcdHJlbmRlckZyYW1lKCk7XG5cdH1cblxuPC9zY3JpcHQ+XG5cbjxjYW52YXMgYmluZDp0aGlzPXtjYW52YXN9IG9uOm1vdXNld2hlZWw9e3pvb219PlxuXG48L2NhbnZhcz5cblxuPHN0eWxlPlxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgY2FudmFzIHtcbiAgICAgICAgICAgIHdpZHRoOiAzNDBweDtcbiAgICAgICAgICAgIGhlaWdodDogMzQwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cblx0QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0ODBweCkge1xuICAgICAgICBjYW52YXMge1xuICAgICAgICAgICAgd2lkdGg6IDUwMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA1MDBweDtcbiAgICAgICAgfVxuICAgIH1cblxuXHRAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjBweCkge1xuICAgICAgICBjYW52YXMge1xuICAgICAgICAgICAgd2lkdGg6IDY1MHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA2NTBweDtcbiAgICAgICAgfVxuICAgIH1cbjwvc3R5bGU+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlLSSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUN2QyxNQUFNLGVBQUMsQ0FBQyxBQUNKLEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDakIsQ0FBQyxBQUNMLENBQUMsQUFFSixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUNwQyxNQUFNLGVBQUMsQ0FBQyxBQUNKLEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDakIsQ0FBQyxBQUNMLENBQUMsQUFFSixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksTUFBTSxDQUFDLEFBQUMsQ0FBQyxBQUNyQyxNQUFNLGVBQUMsQ0FBQyxBQUNKLEtBQUssQ0FBRSxLQUFLLENBQ1osTUFBTSxDQUFFLEtBQUssQUFDakIsQ0FBQyxBQUNMLENBQUMifQ== */